/* FILE GENERATED AUTOMATICALLY, DO NOT EDIT */

#include <ilcplex/cplex.h>
#include "CPXMILPSolver.h"

using namespace SMSpp_di_unipi_it;

const std::array< int, CPX_NUM_INT_PARS > CPXMILPSolver::SMSpp_to_CPLEX_int_pars{
 CPX_PARAM_ADVIND,
 CPX_PARAM_AGGFILL,
 CPX_PARAM_AGGIND,
 CPX_PARAM_CLOCKTYPE,
 CPX_PARAM_CRAIND,
 CPX_PARAM_DEPIND,
 CPX_PARAM_DPRIIND,
 CPX_PARAM_PRICELIM,
 CPX_PARAM_SIMDISPLAY,
 CPX_PARAM_ITLIM,
 CPX_PARAM_ROWREADLIM,
 CPX_PARAM_NETFIND,
 CPX_PARAM_COLREADLIM,
 CPX_PARAM_NZREADLIM,
 CPX_PARAM_PERIND,
 CPX_PARAM_PERLIM,
 CPX_PARAM_PPRIIND,
 CPX_PARAM_PREIND,
 CPX_PARAM_REINV,
 CPX_PARAM_SCAIND,
 CPX_PARAM_SCRIND,
 CPX_PARAM_SINGLIM,
 CPX_PARAM_PREDUAL,
 CPX_PARAM_PREPASS,
 CPX_PARAM_DATACHECK,
 CPX_PARAM_REDUCE,
 CPX_PARAM_PRELINEAR,
 CPX_PARAM_LPMETHOD,
 CPX_PARAM_QPMETHOD,
 CPX_PARAM_THREADS,
 CPX_PARAM_CONFLICTALG,
 CPX_PARAM_CONFLICTDISPLAY,
 CPX_PARAM_SIFTDISPLAY,
 CPX_PARAM_SIFTALG,
 CPX_PARAM_SIFTITLIM,
 CPX_PARAM_MPSLONGNUM,
 CPX_PARAM_MEMORYEMPHASIS,
 CPX_PARAM_NUMERICALEMPHASIS,
 CPX_PARAM_FEASOPTMODE,
 CPX_PARAM_PARALLELMODE,
 CPX_PARAM_TUNINGMEASURE,
 CPX_PARAM_TUNINGREPEAT,
 CPX_PARAM_TUNINGDISPLAY,
 CPX_PARAM_WRITELEVEL,
 CPX_PARAM_RANDOMSEED,
 CPX_PARAM_OPTIMALITYTARGET,
 CPX_PARAM_CLONELOG,
 CPX_PARAM_SOLUTIONTYPE,
 CPX_PARAM_SIFTSIM,
 CPX_PARAM_DYNAMICROWS,
 CPX_PARAM_RECORD,
 CPX_PARAM_PARAMDISPLAY,
 CPX_PARAM_WORKERALG,
 CPX_PARAM_BENDERSSTRATEGY,
 CPX_PARAM_BRDIR,
 CPX_PARAM_CLIQUES,
 CPX_PARAM_COEREDIND,
 CPX_PARAM_COVERS,
 CPX_PARAM_MIPDISPLAY,
 CPX_PARAM_MIPINTERVAL,
 CPX_PARAM_INTSOLLIM,
 CPX_PARAM_NODEFILEIND,
 CPX_PARAM_NODELIM,
 CPX_PARAM_NODESEL,
 CPX_PARAM_MIPORDIND,
 CPX_PARAM_STARTALG,
 CPX_PARAM_SUBALG,
 CPX_PARAM_VARSEL,
 CPX_PARAM_BNDSTRENIND,
 CPX_PARAM_HEURFREQ,
 CPX_PARAM_MIPORDTYPE,
 CPX_PARAM_RELAXPREIND,
 CPX_PARAM_PRESLVND,
 CPX_PARAM_BBINTERVAL,
 CPX_PARAM_FLOWCOVERS,
 CPX_PARAM_IMPLBD,
 CPX_PARAM_PROBE,
 CPX_PARAM_GUBCOVERS,
 CPX_PARAM_STRONGCANDLIM,
 CPX_PARAM_STRONGITLIM,
 CPX_PARAM_FRACCAND,
 CPX_PARAM_FRACCUTS,
 CPX_PARAM_FRACPASS,
 CPX_PARAM_FLOWPATHS,
 CPX_PARAM_MIRCUTS,
 CPX_PARAM_DISJCUTS,
 CPX_PARAM_AGGCUTLIM,
 CPX_PARAM_MIPCBREDLP,
 CPX_PARAM_CUTPASS,
 CPX_PARAM_MIPEMPHASIS,
 CPX_PARAM_SYMMETRY,
 CPX_PARAM_DIVETYPE,
 CPX_PARAM_RINSHEUR,
 CPX_PARAM_SUBMIPNODELIM,
 CPX_PARAM_LBHEUR,
 CPX_PARAM_REPEATPRESOLVE,
 CPX_PARAM_REPAIRTRIES,
 CPX_PARAM_FPHEUR,
 CPX_PARAM_EACHCUTLIM,
 CPX_PARAM_SOLNPOOLCAPACITY,
 CPX_PARAM_SOLNPOOLREPLACE,
 CPX_PARAM_SOLNPOOLINTENSITY,
 CPX_PARAM_POPULATELIM,
 CPX_PARAM_MIPSEARCH,
 CPX_PARAM_MIQCPSTRAT,
 CPX_PARAM_ZEROHALFCUTS,
 CPX_PARAM_POLISHAFTERNODE,
 CPX_PARAM_POLISHAFTERINTSOL,
 CPX_PARAM_MCFCUTS,
 CPX_PARAM_MIPKAPPASTATS,
 CPX_PARAM_AUXROOTTHREADS,
 CPX_PARAM_LANDPCUTS,
 CPX_PARAM_RAMPUPDURATION,
 CPX_PARAM_LOCALIMPLBD,
 CPX_PARAM_BQPCUTS,
 CPX_PARAM_RLTCUTS,
 CPX_PARAM_SUBMIPSTARTALG,
 CPX_PARAM_SUBMIPSUBALG,
 CPX_PARAM_SUBMIPSCAIND,
 CPX_PARAM_SUBMIPNODELIMIT,
 CPX_PARAM_BARALG,
 CPX_PARAM_BARCOLNZ,
 CPX_PARAM_BARDISPLAY,
 CPX_PARAM_BARITLIM,
 CPX_PARAM_BARMAXCOR,
 CPX_PARAM_BARORDER,
 CPX_PARAM_BARSTARTALG,
 CPX_PARAM_BARCROSSALG,
 CPX_PARAM_QPNZREADLIM,
 CPX_PARAM_CALCQCPDUALS,
 CPX_PARAM_QPMAKEPSDIND,
 CPX_PARAM_QTOLININD,
 CPX_PARAM_NETITLIM,
 CPX_PARAM_NETPPRIIND,
 CPX_PARAM_NETDISPLAY,
};

const std::array< int, CPX_NUM_DBL_PARS > CPXMILPSolver::SMSpp_to_CPLEX_dbl_pars{
 CPX_PARAM_EPMRK,
 CPX_PARAM_EPOPT,
 CPX_PARAM_EPPER,
 CPX_PARAM_EPRHS,
 CPX_PARAM_OBJLLIM,
 CPX_PARAM_OBJULIM,
 CPX_PARAM_TILIM,
 CPX_PARAM_WORKMEM,
 CPX_PARAM_TUNINGTILIM,
 CPX_PARAM_DETTILIM,
 CPX_PARAM_TUNINGDETTILIM,
 CPX_PARAM_BENDERSFEASCUTTOL,
 CPX_PARAM_BENDERSOPTCUTTOL,
 CPX_PARAM_BTTOL,
 CPX_PARAM_CUTLO,
 CPX_PARAM_CUTUP,
 CPX_PARAM_EPAGAP,
 CPX_PARAM_EPGAP,
 CPX_PARAM_EPINT,
 CPX_PARAM_OBJDIF,
 CPX_PARAM_RELOBJDIF,
 CPX_PARAM_TRELIM,
 CPX_PARAM_CUTSFACTOR,
 CPX_PARAM_PROBETIME,
 CPX_PARAM_POLISHTIME,
 CPX_PARAM_EPRELAX,
 CPX_PARAM_SOLNPOOLGAP,
 CPX_PARAM_SOLNPOOLAGAP,
 CPX_PARAM_POLISHAFTEREPAGAP,
 CPX_PARAM_POLISHAFTEREPGAP,
 CPX_PARAM_POLISHAFTERTIME,
 CPX_PARAM_PROBEDETTIME,
 CPX_PARAM_POLISHAFTERDETTIME,
 CPX_PARAM_RAMPUPDETTILIM,
 CPX_PARAM_RAMPUPTILIM,
 CPX_PARAM_BAREPCOMP,
 CPX_PARAM_BARGROWTH,
 CPX_PARAM_BAROBJRNG,
 CPX_PARAM_BARQCPEPCOMP,
 CPX_PARAM_NETEPOPT,
 CPX_PARAM_NETEPRHS,
};

const std::array< int, CPX_NUM_STR_PARS > CPXMILPSolver::SMSpp_to_CPLEX_str_pars{
 CPX_PARAM_WORKDIR,
 CPX_PARAM_FILEENCODING,
 CPX_PARAM_APIENCODING,
 CPX_PARAM_CPUMASK,
 CPX_PARAM_INTSOLFILEPREFIX,
};

const std::array< std::pair< int, int >, CPX_NUM_INT_PARS >
 CPXMILPSolver::CPLEX_to_SMSpp_int_pars{
 {
  { CPX_PARAM_ADVIND, intFirstCPLEXPar + 0 },
  { CPX_PARAM_AGGFILL, intFirstCPLEXPar + 1 },
  { CPX_PARAM_AGGIND, intFirstCPLEXPar + 2 },
  { CPX_PARAM_CLOCKTYPE, intFirstCPLEXPar + 3 },
  { CPX_PARAM_CRAIND, intFirstCPLEXPar + 4 },
  { CPX_PARAM_DEPIND, intFirstCPLEXPar + 5 },
  { CPX_PARAM_DPRIIND, intFirstCPLEXPar + 6 },
  { CPX_PARAM_PRICELIM, intFirstCPLEXPar + 7 },
  { CPX_PARAM_SIMDISPLAY, intFirstCPLEXPar + 8 },
  { CPX_PARAM_ITLIM, intFirstCPLEXPar + 9 },
  { CPX_PARAM_ROWREADLIM, intFirstCPLEXPar + 10 },
  { CPX_PARAM_NETFIND, intFirstCPLEXPar + 11 },
  { CPX_PARAM_COLREADLIM, intFirstCPLEXPar + 12 },
  { CPX_PARAM_NZREADLIM, intFirstCPLEXPar + 13 },
  { CPX_PARAM_PERIND, intFirstCPLEXPar + 14 },
  { CPX_PARAM_PERLIM, intFirstCPLEXPar + 15 },
  { CPX_PARAM_PPRIIND, intFirstCPLEXPar + 16 },
  { CPX_PARAM_PREIND, intFirstCPLEXPar + 17 },
  { CPX_PARAM_REINV, intFirstCPLEXPar + 18 },
  { CPX_PARAM_SCAIND, intFirstCPLEXPar + 19 },
  { CPX_PARAM_SCRIND, intFirstCPLEXPar + 20 },
  { CPX_PARAM_SINGLIM, intFirstCPLEXPar + 21 },
  { CPX_PARAM_PREDUAL, intFirstCPLEXPar + 22 },
  { CPX_PARAM_PREPASS, intFirstCPLEXPar + 23 },
  { CPX_PARAM_DATACHECK, intFirstCPLEXPar + 24 },
  { CPX_PARAM_REDUCE, intFirstCPLEXPar + 25 },
  { CPX_PARAM_PRELINEAR, intFirstCPLEXPar + 26 },
  { CPX_PARAM_LPMETHOD, intFirstCPLEXPar + 27 },
  { CPX_PARAM_QPMETHOD, intFirstCPLEXPar + 28 },
  { CPX_PARAM_THREADS, intFirstCPLEXPar + 29 },
  { CPX_PARAM_CONFLICTALG, intFirstCPLEXPar + 30 },
  { CPX_PARAM_CONFLICTDISPLAY, intFirstCPLEXPar + 31 },
  { CPX_PARAM_SIFTDISPLAY, intFirstCPLEXPar + 32 },
  { CPX_PARAM_SIFTALG, intFirstCPLEXPar + 33 },
  { CPX_PARAM_SIFTITLIM, intFirstCPLEXPar + 34 },
  { CPX_PARAM_MPSLONGNUM, intFirstCPLEXPar + 35 },
  { CPX_PARAM_MEMORYEMPHASIS, intFirstCPLEXPar + 36 },
  { CPX_PARAM_NUMERICALEMPHASIS, intFirstCPLEXPar + 37 },
  { CPX_PARAM_FEASOPTMODE, intFirstCPLEXPar + 38 },
  { CPX_PARAM_PARALLELMODE, intFirstCPLEXPar + 39 },
  { CPX_PARAM_TUNINGMEASURE, intFirstCPLEXPar + 40 },
  { CPX_PARAM_TUNINGREPEAT, intFirstCPLEXPar + 41 },
  { CPX_PARAM_TUNINGDISPLAY, intFirstCPLEXPar + 42 },
  { CPX_PARAM_WRITELEVEL, intFirstCPLEXPar + 43 },
  { CPX_PARAM_RANDOMSEED, intFirstCPLEXPar + 44 },
  { CPX_PARAM_OPTIMALITYTARGET, intFirstCPLEXPar + 45 },
  { CPX_PARAM_CLONELOG, intFirstCPLEXPar + 46 },
  { CPX_PARAM_SOLUTIONTYPE, intFirstCPLEXPar + 47 },
  { CPX_PARAM_SIFTSIM, intFirstCPLEXPar + 48 },
  { CPX_PARAM_DYNAMICROWS, intFirstCPLEXPar + 49 },
  { CPX_PARAM_RECORD, intFirstCPLEXPar + 50 },
  { CPX_PARAM_PARAMDISPLAY, intFirstCPLEXPar + 51 },
  { CPX_PARAM_WORKERALG, intFirstCPLEXPar + 52 },
  { CPX_PARAM_BENDERSSTRATEGY, intFirstCPLEXPar + 53 },
  { CPX_PARAM_BRDIR, intFirstCPLEXPar + 54 },
  { CPX_PARAM_CLIQUES, intFirstCPLEXPar + 55 },
  { CPX_PARAM_COEREDIND, intFirstCPLEXPar + 56 },
  { CPX_PARAM_COVERS, intFirstCPLEXPar + 57 },
  { CPX_PARAM_MIPDISPLAY, intFirstCPLEXPar + 58 },
  { CPX_PARAM_MIPINTERVAL, intFirstCPLEXPar + 59 },
  { CPX_PARAM_INTSOLLIM, intFirstCPLEXPar + 60 },
  { CPX_PARAM_NODEFILEIND, intFirstCPLEXPar + 61 },
  { CPX_PARAM_NODELIM, intFirstCPLEXPar + 62 },
  { CPX_PARAM_NODESEL, intFirstCPLEXPar + 63 },
  { CPX_PARAM_MIPORDIND, intFirstCPLEXPar + 64 },
  { CPX_PARAM_STARTALG, intFirstCPLEXPar + 65 },
  { CPX_PARAM_SUBALG, intFirstCPLEXPar + 66 },
  { CPX_PARAM_VARSEL, intFirstCPLEXPar + 67 },
  { CPX_PARAM_BNDSTRENIND, intFirstCPLEXPar + 68 },
  { CPX_PARAM_HEURFREQ, intFirstCPLEXPar + 69 },
  { CPX_PARAM_MIPORDTYPE, intFirstCPLEXPar + 70 },
  { CPX_PARAM_RELAXPREIND, intFirstCPLEXPar + 71 },
  { CPX_PARAM_PRESLVND, intFirstCPLEXPar + 72 },
  { CPX_PARAM_BBINTERVAL, intFirstCPLEXPar + 73 },
  { CPX_PARAM_FLOWCOVERS, intFirstCPLEXPar + 74 },
  { CPX_PARAM_IMPLBD, intFirstCPLEXPar + 75 },
  { CPX_PARAM_PROBE, intFirstCPLEXPar + 76 },
  { CPX_PARAM_GUBCOVERS, intFirstCPLEXPar + 77 },
  { CPX_PARAM_STRONGCANDLIM, intFirstCPLEXPar + 78 },
  { CPX_PARAM_STRONGITLIM, intFirstCPLEXPar + 79 },
  { CPX_PARAM_FRACCAND, intFirstCPLEXPar + 80 },
  { CPX_PARAM_FRACCUTS, intFirstCPLEXPar + 81 },
  { CPX_PARAM_FRACPASS, intFirstCPLEXPar + 82 },
  { CPX_PARAM_FLOWPATHS, intFirstCPLEXPar + 83 },
  { CPX_PARAM_MIRCUTS, intFirstCPLEXPar + 84 },
  { CPX_PARAM_DISJCUTS, intFirstCPLEXPar + 85 },
  { CPX_PARAM_AGGCUTLIM, intFirstCPLEXPar + 86 },
  { CPX_PARAM_MIPCBREDLP, intFirstCPLEXPar + 87 },
  { CPX_PARAM_CUTPASS, intFirstCPLEXPar + 88 },
  { CPX_PARAM_MIPEMPHASIS, intFirstCPLEXPar + 89 },
  { CPX_PARAM_SYMMETRY, intFirstCPLEXPar + 90 },
  { CPX_PARAM_DIVETYPE, intFirstCPLEXPar + 91 },
  { CPX_PARAM_RINSHEUR, intFirstCPLEXPar + 92 },
  { CPX_PARAM_SUBMIPNODELIM, intFirstCPLEXPar + 93 },
  { CPX_PARAM_LBHEUR, intFirstCPLEXPar + 94 },
  { CPX_PARAM_REPEATPRESOLVE, intFirstCPLEXPar + 95 },
  { CPX_PARAM_REPAIRTRIES, intFirstCPLEXPar + 96 },
  { CPX_PARAM_FPHEUR, intFirstCPLEXPar + 97 },
  { CPX_PARAM_EACHCUTLIM, intFirstCPLEXPar + 98 },
  { CPX_PARAM_SOLNPOOLCAPACITY, intFirstCPLEXPar + 99 },
  { CPX_PARAM_SOLNPOOLREPLACE, intFirstCPLEXPar + 100 },
  { CPX_PARAM_SOLNPOOLINTENSITY, intFirstCPLEXPar + 101 },
  { CPX_PARAM_POPULATELIM, intFirstCPLEXPar + 102 },
  { CPX_PARAM_MIPSEARCH, intFirstCPLEXPar + 103 },
  { CPX_PARAM_MIQCPSTRAT, intFirstCPLEXPar + 104 },
  { CPX_PARAM_ZEROHALFCUTS, intFirstCPLEXPar + 105 },
  { CPX_PARAM_POLISHAFTERNODE, intFirstCPLEXPar + 106 },
  { CPX_PARAM_POLISHAFTERINTSOL, intFirstCPLEXPar + 107 },
  { CPX_PARAM_MCFCUTS, intFirstCPLEXPar + 108 },
  { CPX_PARAM_MIPKAPPASTATS, intFirstCPLEXPar + 109 },
  { CPX_PARAM_AUXROOTTHREADS, intFirstCPLEXPar + 110 },
  { CPX_PARAM_LANDPCUTS, intFirstCPLEXPar + 111 },
  { CPX_PARAM_RAMPUPDURATION, intFirstCPLEXPar + 112 },
  { CPX_PARAM_LOCALIMPLBD, intFirstCPLEXPar + 113 },
  { CPX_PARAM_BQPCUTS, intFirstCPLEXPar + 114 },
  { CPX_PARAM_RLTCUTS, intFirstCPLEXPar + 115 },
  { CPX_PARAM_SUBMIPSTARTALG, intFirstCPLEXPar + 116 },
  { CPX_PARAM_SUBMIPSUBALG, intFirstCPLEXPar + 117 },
  { CPX_PARAM_SUBMIPSCAIND, intFirstCPLEXPar + 118 },
  { CPX_PARAM_SUBMIPNODELIMIT, intFirstCPLEXPar + 119 },
  { CPX_PARAM_BARALG, intFirstCPLEXPar + 120 },
  { CPX_PARAM_BARCOLNZ, intFirstCPLEXPar + 121 },
  { CPX_PARAM_BARDISPLAY, intFirstCPLEXPar + 122 },
  { CPX_PARAM_BARITLIM, intFirstCPLEXPar + 123 },
  { CPX_PARAM_BARMAXCOR, intFirstCPLEXPar + 124 },
  { CPX_PARAM_BARORDER, intFirstCPLEXPar + 125 },
  { CPX_PARAM_BARSTARTALG, intFirstCPLEXPar + 126 },
  { CPX_PARAM_BARCROSSALG, intFirstCPLEXPar + 127 },
  { CPX_PARAM_QPNZREADLIM, intFirstCPLEXPar + 128 },
  { CPX_PARAM_CALCQCPDUALS, intFirstCPLEXPar + 129 },
  { CPX_PARAM_QPMAKEPSDIND, intFirstCPLEXPar + 130 },
  { CPX_PARAM_QTOLININD, intFirstCPLEXPar + 131 },
  { CPX_PARAM_NETITLIM, intFirstCPLEXPar + 132 },
  { CPX_PARAM_NETPPRIIND, intFirstCPLEXPar + 133 },
  { CPX_PARAM_NETDISPLAY, intFirstCPLEXPar + 134 },
 }
};

const std::array< std::pair< int, int >, CPX_NUM_DBL_PARS >
 CPXMILPSolver::CPLEX_to_SMSpp_dbl_pars{
 {
  { CPX_PARAM_EPMRK, dblFirstCPLEXPar + 0 },
  { CPX_PARAM_EPOPT, dblFirstCPLEXPar + 1 },
  { CPX_PARAM_EPPER, dblFirstCPLEXPar + 2 },
  { CPX_PARAM_EPRHS, dblFirstCPLEXPar + 3 },
  { CPX_PARAM_OBJLLIM, dblFirstCPLEXPar + 4 },
  { CPX_PARAM_OBJULIM, dblFirstCPLEXPar + 5 },
  { CPX_PARAM_TILIM, dblFirstCPLEXPar + 6 },
  { CPX_PARAM_WORKMEM, dblFirstCPLEXPar + 7 },
  { CPX_PARAM_TUNINGTILIM, dblFirstCPLEXPar + 8 },
  { CPX_PARAM_DETTILIM, dblFirstCPLEXPar + 9 },
  { CPX_PARAM_TUNINGDETTILIM, dblFirstCPLEXPar + 10 },
  { CPX_PARAM_BENDERSFEASCUTTOL, dblFirstCPLEXPar + 11 },
  { CPX_PARAM_BENDERSOPTCUTTOL, dblFirstCPLEXPar + 12 },
  { CPX_PARAM_BTTOL, dblFirstCPLEXPar + 13 },
  { CPX_PARAM_CUTLO, dblFirstCPLEXPar + 14 },
  { CPX_PARAM_CUTUP, dblFirstCPLEXPar + 15 },
  { CPX_PARAM_EPAGAP, dblFirstCPLEXPar + 16 },
  { CPX_PARAM_EPGAP, dblFirstCPLEXPar + 17 },
  { CPX_PARAM_EPINT, dblFirstCPLEXPar + 18 },
  { CPX_PARAM_OBJDIF, dblFirstCPLEXPar + 19 },
  { CPX_PARAM_RELOBJDIF, dblFirstCPLEXPar + 20 },
  { CPX_PARAM_TRELIM, dblFirstCPLEXPar + 21 },
  { CPX_PARAM_CUTSFACTOR, dblFirstCPLEXPar + 22 },
  { CPX_PARAM_PROBETIME, dblFirstCPLEXPar + 23 },
  { CPX_PARAM_POLISHTIME, dblFirstCPLEXPar + 24 },
  { CPX_PARAM_EPRELAX, dblFirstCPLEXPar + 25 },
  { CPX_PARAM_SOLNPOOLGAP, dblFirstCPLEXPar + 26 },
  { CPX_PARAM_SOLNPOOLAGAP, dblFirstCPLEXPar + 27 },
  { CPX_PARAM_POLISHAFTEREPAGAP, dblFirstCPLEXPar + 28 },
  { CPX_PARAM_POLISHAFTEREPGAP, dblFirstCPLEXPar + 29 },
  { CPX_PARAM_POLISHAFTERTIME, dblFirstCPLEXPar + 30 },
  { CPX_PARAM_PROBEDETTIME, dblFirstCPLEXPar + 31 },
  { CPX_PARAM_POLISHAFTERDETTIME, dblFirstCPLEXPar + 32 },
  { CPX_PARAM_RAMPUPDETTILIM, dblFirstCPLEXPar + 33 },
  { CPX_PARAM_RAMPUPTILIM, dblFirstCPLEXPar + 34 },
  { CPX_PARAM_BAREPCOMP, dblFirstCPLEXPar + 35 },
  { CPX_PARAM_BARGROWTH, dblFirstCPLEXPar + 36 },
  { CPX_PARAM_BAROBJRNG, dblFirstCPLEXPar + 37 },
  { CPX_PARAM_BARQCPEPCOMP, dblFirstCPLEXPar + 38 },
  { CPX_PARAM_NETEPOPT, dblFirstCPLEXPar + 39 },
  { CPX_PARAM_NETEPRHS, dblFirstCPLEXPar + 40 },
 }
};

const std::array< std::pair< int, int >, CPX_NUM_STR_PARS >
 CPXMILPSolver::CPLEX_to_SMSpp_str_pars{
 {
  { CPX_PARAM_WORKDIR, strFirstCPLEXPar + 0 },
  { CPX_PARAM_FILEENCODING, strFirstCPLEXPar + 1 },
  { CPX_PARAM_APIENCODING, strFirstCPLEXPar + 2 },
  { CPX_PARAM_CPUMASK, strFirstCPLEXPar + 3 },
  { CPX_PARAM_INTSOLFILEPREFIX, strFirstCPLEXPar + 4 },
 }
};
